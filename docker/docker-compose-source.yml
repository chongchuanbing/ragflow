include:
  - path: ./docker-compose-base.yml
    env_file: ./.env

services:
  ragflow-api:
    depends_on:
      mysql:
        condition: service_healthy
      es01:
        condition: service_healthy
    build:
      context: ../
      dockerfile: Dockerfile.backend
    ports:
      - ${SVR_HTTP_PORT}:9380
      - 5678:5678
    volumes:
      - ./service_conf.yaml:/app/conf/service_conf.yaml
      - ./ragflow-logs:/app/logs
    environment:
      - TZ=${TIMEZONE}
      - HF_ENDPOINT=${HF_ENDPOINT}
      - MACOS=${MACOS}
      - MODE=api
    networks:
      - ragflow
    restart: always

  ragflow-worker:
    depends_on:
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
      es01:
        condition: service_healthy
    build:
      context: ../
      dockerfile: Dockerfile.backend
    volumes:
      - ./service_conf.yaml:/app/conf/service_conf.yaml
      - ./ragflow-logs:/app/logs
    environment:
      - TZ=${TIMEZONE}
      - HF_ENDPOINT=${HF_ENDPOINT}
      - MACOS=${MACOS}
      - MODE=worker
    networks:
      - ragflow
    restart: always

  ragflow-web:
    build:
      context: ../web
      dockerfile: Dockerfile.frontend
    restart: always
    environment:
      NGINX_SERVER_NAME: ${NGINX_SERVER_NAME:-_}
      NGINX_HTTPS_ENABLED: ${NGINX_HTTPS_ENABLED:-false}
      NGINX_SSL_PORT: ${NGINX_SSL_PORT:-443}
      NGINX_PORT: ${NGINX_PORT:-80}
      NGINX_WORKER_PROCESSES: ${NGINX_WORKER_PROCESSES:-auto}
      NGINX_CLIENT_MAX_BODY_SIZE: ${NGINX_CLIENT_MAX_BODY_SIZE:-15M}
      NGINX_KEEPALIVE_TIMEOUT: ${NGINX_KEEPALIVE_TIMEOUT:-65}
      NGINX_PROXY_READ_TIMEOUT: ${NGINX_PROXY_READ_TIMEOUT:-3600s}
      NGINX_PROXY_SEND_TIMEOUT: ${NGINX_PROXY_SEND_TIMEOUT:-3600s}
    volumes:
      - ./web-nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
      - ./web-nginx/proxy.conf.template:/etc/nginx/proxy.conf.template
      - ./web-nginx/conf.d:/etc/nginx/conf.d
      - ./web-nginx/docker-entrypoint.sh:/docker-entrypoint-mount.sh
    entrypoint: [ "sh", "-c", "cp /docker-entrypoint-mount.sh /docker-entrypoint.sh && sed -i 's/\r$$//' /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh && sh /docker-entrypoint.sh" ]
    networks:
      - ragflow

  # Certbot service
  # use `docker-compose --profile certbot up` to start the certbot service.
  ragflow-certbot:
    image: certbot/certbot
    profiles:
      - certbot
    volumes:
      - ./volumes/certbot/conf:/etc/letsencrypt
      - ./volumes/certbot/www:/var/www/html
      - ./volumes/certbot/logs:/var/log/letsencrypt
      - ./volumes/certbot/conf/live:/etc/letsencrypt/live
      - ./certbot/update-cert.template.txt:/update-cert.template.txt
      - ./certbot/docker-entrypoint.sh:/docker-entrypoint.sh
    environment:
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
      - CERTBOT_DOMAIN=${CERTBOT_DOMAIN}
      - CERTBOT_OPTIONS=${CERTBOT_OPTIONS:-}
    entrypoint: [ "/docker-entrypoint.sh" ]
    command: [ "tail", "-f", "/dev/null" ]

  # The nginx reverse proxy.
  # used for reverse proxying the API service and Web service.
  ragflow-nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./ragflow-nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
      - ./ragflow-nginx/proxy.conf.template:/etc/nginx/proxy.conf.template
      - ./ragflow-nginx/https.conf.template:/etc/nginx/https.conf.template
      - ./ragflow-nginx/conf.d:/etc/nginx/conf.d
      - ./ragflow-nginx/docker-entrypoint.sh:/docker-entrypoint-mount.sh
      - ./ragflow-nginx/ssl:/etc/ssl # cert dir (legacy)
      - ./volumes/certbot/conf/live:/etc/letsencrypt/live # cert dir (with certbot container)
      - ./volumes/certbot/conf:/etc/letsencrypt
      - ./volumes/certbot/www:/var/www/html
    entrypoint: [ "sh", "-c", "cp /docker-entrypoint-mount.sh /docker-entrypoint.sh && sed -i 's/\r$$//' /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh && /docker-entrypoint.sh" ]
    environment:
      NGINX_SERVER_NAME: ${NGINX_SERVER_NAME:-_}
      NGINX_HTTPS_ENABLED: ${NGINX_HTTPS_ENABLED:-false}
      NGINX_SSL_PORT: ${NGINX_SSL_PORT:-443}
      NGINX_PORT: ${NGINX_PORT:-80}
      # You're required to add your own SSL certificates/keys to the `./nginx/ssl` directory
      # and modify the env vars below in .env if HTTPS_ENABLED is true.
      NGINX_SSL_CERT_FILENAME: ${NGINX_SSL_CERT_FILENAME:-ragflow.crt}
      NGINX_SSL_CERT_KEY_FILENAME: ${NGINX_SSL_CERT_KEY_FILENAME:-ragflow.key}
      NGINX_SSL_PROTOCOLS: ${NGINX_SSL_PROTOCOLS:-TLSv1.1 TLSv1.2 TLSv1.3}
      NGINX_WORKER_PROCESSES: ${NGINX_WORKER_PROCESSES:-auto}
      NGINX_CLIENT_MAX_BODY_SIZE: ${NGINX_CLIENT_MAX_BODY_SIZE:-15M}
      NGINX_KEEPALIVE_TIMEOUT: ${NGINX_KEEPALIVE_TIMEOUT:-65}
      NGINX_PROXY_READ_TIMEOUT: ${NGINX_PROXY_READ_TIMEOUT:-3600s}
      NGINX_PROXY_SEND_TIMEOUT: ${NGINX_PROXY_SEND_TIMEOUT:-3600s}
      NGINX_ENABLE_CERTBOT_CHALLENGE: ${NGINX_ENABLE_CERTBOT_CHALLENGE:-false}
      CERTBOT_DOMAIN: ${CERTBOT_DOMAIN:-}
    depends_on:
      - ragflow-api
      - ragflow-web
    ports:
      - "${EXPOSE_NGINX_PORT:-80}:${NGINX_PORT:-80}"
      - "${EXPOSE_NGINX_SSL_PORT:-443}:${NGINX_SSL_PORT:-443}"
    networks:
      - ragflow
